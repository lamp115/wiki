import{_ as a,c as s,o as n,a as l}from"./app.4779992d.js";const F=JSON.parse('{"title":"状态管理 Pinia","description":"","frontmatter":{},"headers":[{"level":2,"title":"为什么用Pinia","slug":"为什么用pinia","link":"#为什么用pinia","children":[]},{"level":2,"title":"Pinia 使用方法","slug":"pinia-使用方法","link":"#pinia-使用方法","children":[]}],"relativePath":"arco_pro/arco_pro_pinia.md"}'),e={name:"arco_pro/arco_pro_pinia.md"},i=l(`<h1 id="状态管理-pinia" tabindex="-1">状态管理 Pinia <a class="header-anchor" href="#状态管理-pinia" aria-hidden="true">#</a></h1><p>前言: 全局状态管理是一个大型系统不可避免的存在，因为经常有一些需要全局共享的信息需要存储，比如用户信息，所以 PRO 中内置了 Pinia 用于信息共享。 使用 Pinia ，目录更加简洁明了。 同时对Typescript的支持更加友好，具有无可比拟的优越性。</p><h2 id="为什么用pinia" tabindex="-1">为什么用Pinia <a class="header-anchor" href="#为什么用pinia" aria-hidden="true">#</a></h2><p>Pinia 是 Vue 的存储库，它允许您跨组件/页面共享状态。 如果您熟悉 Composition API，您可能会认为您已经可以通过一个简单的 export const state = reactive({}). 这对于单页应用程序来说是正确的，但如果它是服务器端呈现的，会使您的应用程序暴露于安全漏洞。 但即使在小型单页应用程序中，您也可以从使用 Pinia 中获得很多好处：</p><ul><li>dev-tools 支持 <ul><li>跟踪动作、突变的时间线</li><li>Store 出现在使用它们的组件中</li><li>time travel 和 更容易的调试</li></ul></li><li>热模块更换 <ul><li>在不重新加载页面的情况下修改您的 Store</li><li>在开发时保持任何现有状态</li></ul></li><li>插件：使用插件扩展 Pinia 功能</li><li>为 JS 用户提供适当的 TypeScript 支持或 autocompletion</li><li>服务器端渲染支持</li></ul><h2 id="pinia-使用方法" tabindex="-1">Pinia 使用方法 <a class="header-anchor" href="#pinia-使用方法" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineStore</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pinia</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// useStore 可以是 useUser、useCart 之类的任何东西</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 第一个参数是应用程序中 store 的唯一 id (main)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> useStore </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineStore</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// other options...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div>`,7),o=[i];function p(t,r,c,y,D,d){return n(),s("div",null,o)}const h=a(e,[["render",p]]);export{F as __pageData,h as default};
